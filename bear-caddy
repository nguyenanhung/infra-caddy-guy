#!/bin/bash

# Set BASE_DIR reliably based on main.sh location
if command -v realpath >/dev/null 2>&1; then
  BASE_DIR="$(dirname "$(realpath "$0")")"
else
  # Fallback for systems without realpath
  BASE_DIR="$(cd "$(dirname "$0")" && pwd)"
fi

# Export BASE_DIR to be available in sourced files
export BASE_DIR

source "$BASE_DIR/commons/config.sh"
source "$BASE_DIR/commons/utils.sh"
source "$BASE_DIR/services/caddy.sh"
source "$BASE_DIR/commons/menu.sh"
check_bash_version
check_require_packages "curl"
check_require_packages "jq"
check_require_packages "fzf"

# Parse command
case "$1" in
"")
  bear_menu_interactive
  ;;
"introduce")
  bear_welcome_introduce
  ;;
"go")
  if [ -d "$BASE_DIR" ]; then
    cd "$BASE_DIR" || {
      message ERROR "Failed go to the BASE_DIR of infra-caddy command"
      exit 1
    }
    clear
    message INFO "You are in the infra-caddy directory"
    ls -l
  else
    message ERROR "Failed to detected BASE_DIR of infra-caddy command"
    exit 1
  fi
  ;;
"self-update")
  if [ -d "$BASE_DIR" ]; then
    cd "$BASE_DIR" || {
      message ERROR "Failed go to the BASE_DIR of infra-caddy command"
      exit 1
    }
    clear
    message INFO "Infra Caddy Self-Update"
    git pull
    ls -l
  else
    message ERROR "Failed to detected BASE_DIR of infra-caddy command"
    exit 1
  fi
  ;;
"init")
  setup_caddy
  ;;
"reload-caddy")
  restart_caddy
  ;;
"enable-"*)
  service_name="${1#enable-}"
  source "$BASE_DIR/services/common_services.sh"
  enable_service "$service_name"
  ;;
"stop-"*)
  service_name="${1#stop-}"
  source "$BASE_DIR/services/common_services.sh"
  stop_service "$service_name"
  ;;
"start-"*)
  service_name="${1#start-}"
  source "$BASE_DIR/services/common_services.sh"
  start_service "$service_name"
  ;;
"restart-"*)
  service_name="${1#restart-}"
  source "$BASE_DIR/services/common_services.sh"
  restart_service "$service_name"
  ;;
"remove-"*)
  service_name="${1#remove-}"
  source "$BASE_DIR/services/common_services.sh"
  remove_service "$service_name"
  ;;
"log-"*)
  service_name="${1#log-}"
  source "$BASE_DIR/services/common_services.sh"
  log_service "$service_name"
  ;;
"logs")
  shift                            # Shift to remove the first argument
  check_docker_container_logs "$@" # Call delete_site with the remaining arguments
  ;;
"list")
  site_list=$(list_sites)
  echo "$site_list"
  ;;
"install")
  options=(
    "Add new Static Site"
    "Add new Reverse Proxy"
    "Add new Node.js App (Container exists)"
    "Add new Laravel App (Container exists)"
    "Build & Add new Laravel App (PHP-FPM)"
    "Build & Add new Laravel App (Apache2)"
    "Build & Add new Node.js App"
    "Add new Load Balancer Cluster"
  )
  choice=$(printf "%s\n" "${options[@]}" | fzf --prompt="Select an option: ")
  case "$choice" in
  "Add new Static Site") "$0" add-static-site ;;
  "Add new Reverse Proxy") "$0" add-reverse-proxy ;;
  "Add new Node.js App (Container exists)") "$0" add-node-app ;;
  "Add new PHP App (Container exists)") "$0" add-php-app ;;
  "Build & Add new Laravel App (PHP-FPM)") "$0" laravel-up ;;
  "Build & Add new Laravel App (Apache2)") "$0" laravel-apache-up ;;
  "Build & Add new Node.js App") "$0" node-up ;;
  "Add new Load Balancer Cluster") "$0" add-load-balancer ;;
  esac
  ;;
"delete")
  shift            # Shift to remove the first argument
  delete_site "$@" # Call delete_site with the remaining arguments
  ;;
"stop")
  shift          # Shift to remove the first argument
  stop_site "$@" # Call delete_site with the remaining arguments
  ;;
"start")
  shift           # Shift to remove the first argument
  start_site "$@" # Call delete_site with the remaining arguments
  ;;
"restart")
  shift             # Shift to remove the first argument
  restart_site "$@" # Call delete_site with the remaining arguments
  ;;
"basic-auth")
  shift               # Shift to remove the first argument
  add_basic_auth "$@" # Call delete_site with the remaining arguments
  ;;
"delete-basic-auth")
  shift                  # Shift to remove the first argument
  delete_basic_auth "$@" # Call delete_site with the remaining arguments
  ;;
"add-reverse-proxy")
  source "$BASE_DIR/services/reverse-proxy.sh"
  shift                  # Shift to remove the first argument
  add_reverse_proxy "$@" # Call delete_site with the remaining arguments
  ;;
"delete-reverse-proxy")
  source "$BASE_DIR/services/reverse-proxy.sh"
  shift                     # Shift to remove the first argument
  delete_reverse_proxy "$@" # Call delete_site with the remaining arguments
  ;;
"add-load-balancer")
  source "$BASE_DIR/services/load-balancer.sh"
  shift                  # Shift to remove the first argument
  add_load_balancer "$@" # Call delete_site with the remaining arguments
  ;;
"delete-load-balancer")
  source "$BASE_DIR/services/load-balancer.sh"
  shift                     # Shift to remove the first argument
  delete_load_balancer "$@" # Call delete_site with the remaining arguments
  ;;
"delete-load-balancer-backend")
  source "$BASE_DIR/services/load-balancer.sh"
  shift                             # Shift to remove the first argument
  delete_load_balancer_backend "$@" # Call delete_site with the remaining arguments
  ;;
"laravel-apache-up")
  source "$BASE_DIR/services/laravel-up-apache.sh"
  shift                  # Shift to remove the first argument
  laravel_up_apache "$@" # Call delete_site with the remaining arguments
  ;;
"laravel-up")
  source "$BASE_DIR/services/laravel-up.sh"
  shift           # Shift to remove the first argument
  laravel_up "$@" # Call delete_site with the remaining arguments
  ;;
"laravel-down")
  source "$BASE_DIR/services/laravel-up.sh"
  shift             # Shift to remove the first argument
  laravel_down "$@" # Call delete_site with the remaining arguments
  ;;
"laravel-restore")
  source "$BASE_DIR/services/laravel-up.sh"
  shift                # Shift to remove the first argument
  laravel_restore "$@" # Call delete_site with the remaining arguments
  ;;
"laravel-remove")
  source "$BASE_DIR/services/laravel-up.sh"
  shift               # Shift to remove the first argument
  laravel_remove "$@" # Call delete_site with the remaining arguments
  ;;
"add-php-app")
  source "$BASE_DIR/services/php-app.sh"
  shift            # Shift to remove the first argument
  add_php_app "$@" # Call delete_site with the remaining arguments
  ;;
"delete-php-app")
  source "$BASE_DIR/services/php-app.sh"
  shift               # Shift to remove the first argument
  delete_php_app "$@" # Call delete_site with the remaining arguments
  ;;
"add-static-site")
  source "$BASE_DIR/services/static-site.sh"
  shift                # Shift to remove the first argument
  add_static_site "$@" # Call delete_site with the remaining arguments
  ;;
"delete-static-site")
  source "$BASE_DIR/services/static-site.sh"
  shift                   # Shift to remove the first argument
  delete_static_site "$@" # Call delete_site with the remaining arguments
  ;;
"add-node-app")
  source "$BASE_DIR/services/node-app.sh"
  shift             # Shift to remove the first argument
  add_node_app "$@" # Call delete_site with the remaining arguments
  ;;
"delete-node-app")
  source "$BASE_DIR/services/node-app.sh"
  shift                # Shift to remove the first argument
  delete_node_app "$@" # Call delete_site with the remaining arguments
  ;;
"node-up")
  source "$BASE_DIR/services/node-up.sh"
  shift        # Shift to remove the first argument
  node_up "$@" # Call delete_site with the remaining arguments
  ;;
"node-down")
  source "$BASE_DIR/services/node-up.sh"
  shift          # Shift to remove the first argument
  node_down "$@" # Call delete_site with the remaining arguments
  ;;
"node-restore")
  source "$BASE_DIR/services/node-up.sh"
  shift             # Shift to remove the first argument
  node_restore "$@" # Call delete_site with the remaining arguments
  ;;
"node-remove")
  source "$BASE_DIR/services/node-up.sh"
  shift            # Shift to remove the first argument
  node_remove "$@" # Call delete_site with the remaining arguments
  ;;
"join-caddy")
  shift                       # Shift to remove the first argument
  docker_network_connect "$@" # Call delete_site with the remaining arguments
  ;;
"disconnect-caddy")
  shift                          # Shift to remove the first argument
  docker_network_disconnect "$@" # Call delete_site with the remaining arguments
  ;;
"docker-disk")
  shift # Shift to remove the first argument
  docker_system_disk
  ;;
"clean-build-cache")
  shift # Shift to remove the first argument
  docker_clean_build_cache
  ;;
*)
  message ERROR "Unknown command: $1"
  exit 1
  ;;
esac
